openapi: 3.0.0
info:
  title: Webhook and Subscription API
  version: 1.0.0
  description: API for webhook and subscription management

tags:
  - name: Metadata Operations
    description: Operations related to metadata
  - name: Webhooks
    description: Operations related to webhooks
  - name: Subscriptions
    description: Operations related to subscriptions
  - name: Subscription Events
    description: Operations related to subscription events
    
paths:
  /webhooks:
    post:
      tags:
        - Webhooks
      summary: Register a webhook
      description: Allows customers to register a webhook with configurations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRegistration'
      responses:
        '200':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistrationResponse'
    get:
      tags:
        - Webhooks
      summary: Get webhook data
      description: Retrieve webhook data based on webhook name or organization name.
      parameters:
        - name: webhookName
          in: query
          description: Webhook name
          schema:
            type: string
        - name: orgName
          in: query
          description: Organization name
          schema:
            type: string
      responses:
        '200':
          description: Webhook data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDataResponse'
  /webhooks/{webhookId}:
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook
      description: Delete a registered webhook. If associated with any subscription, it won't be deleted.
      parameters:
        - name: webhookId
          in: path
          description: Unique identifier of the registered webhook
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook deleted successfully
        '400':
          description: Bad request - Webhook associated with a subscription
    patch:
      tags:
        - Webhooks
      summary: Update a webhook
      description: Update the details of a registered webhook.
      parameters:
        - name: webhookId
          in: path
          description: Unique identifier of the registered webhook
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateRequest'
      responses:
        '200':
          description: Webhook updated successfully
  /webhooks/{webhookId}/test:
    post:
      tags:
        - Webhooks
      summary: Test the webhook
      description: Allows customers to test a registered webhook by echoing the message sent.
      parameters:
        - name: webhookId
          in: path
          description: Unique identifier of the registered webhook
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookTestRequest'
      responses:
        '200':
          description: Webhook test successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookTestResponse'
  /subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: Create a new subscription with specified details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    get:
      tags:
        - Subscriptions
      summary: Get all subscriptions
      description: Retrieve all subscriptions.
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
  /subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Get a subscription
      description: Retrieve details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    delete:
      tags:
        - Subscriptions
      summary: Delete a subscription
      description: Delete a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription deleted successfully
        '400':
          description: Bad request - Subscription associated with a webhook
    patch:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update the details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateRequest'
      responses:
        '200':
          description: Subscription updated successfully
    post:
      tags:
        - Subscriptions
      summary: Assign a webhook to a subscription
      description: Assign a webhook to a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookAssignmentRequest'
      responses:
        '200':
          description: Webhook assigned to the subscription successfully
        '400':
          description: Bad request - Webhook or subscription not found or already assigned
  /metadata/entities:
    get:
      tags:
        - Metadata Operations
      summary: Get list of entity names
      description: Retrieve a list of entity names that can be subscribed.
      responses:
        '200':
          description: List of entity names retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityListResponse'
  /metadata/entities/merge-config:
    post:
      tags:
        - Metadata Operations
      summary: Create entities with merge logic
      description: Create entities by defining merge logic for existing entities.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeConfigRequest'
      responses:
        '200':
          description: Entities created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeConfigResponse' 
  /metadata/transformations:
    get:
      tags:
        - Metadata Operations
      summary: Get list of available transformations
      description: Retrieve a list of transformations that can be applied on the response payload of a subscription.
      responses:
        '200':
          description: List of transformations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationListResponse'

components:
  schemas:
    WebhookRegistration:
      type: object
      properties:
        url:
          type: string
        retryCount:
          type: integer
        authHeader:
          type: string
        customHeaders:
          type: object
        useCustomSSL:
          type: boolean
        customSSLCertificate:
          type: string
          format: binary
    WebhookUpdateRequest:
      type: object
      properties:
        url:
          type: string
        retryCount:
          type: integer
        authHeader:
          type: string
        customHeaders:
          type: object
        useCustomSSL:
          type: boolean
        customSSLCertificate:
          type: string
          format: binary
    WebhookRegistrationResponse:
      type: object
      properties:
        webhookId:
          type: string
    WebhookTestRequest:
      type: object
      properties:
        message:
          type: string
    WebhookTestResponse:
      type: object
      properties:
        echoedMessage:
          type: string
    WebhookDataResponse:
      type: object
      properties:
        webhookId:
          type: string
        url:
          type: string
        retryCount:
          type: integer
        authHeader:
          type: string
        customHeaders:
          type: object
        useCustomSSL:
          type: boolean
        tokenValidity:
          type: integer
    Subscription:
      type: object
      properties:
        name:
          type: string
        subscribedEntityName:
          type: string
        metadataResponse:
          type: object
        transformationConfig:
          type: object
        status:
          type: string
          enum:
            - active
            - paused
            - inactive
    SubscriptionResponse:
      type: object
      properties:
        subscriptionId:
          type: string
    SubscriptionListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    SubscriptionUpdateRequest:
      type: object
      properties:
        name:
          type: string
        subscribedEntityName:
          type: string
        metadataResponse:
          type: object
        transformationConfig:
          type: object
        status:
          type: string
          enum:
            - active
            - paused
            - inactive
    WebhookAssignmentRequest:
      type: object
      properties:
        webhookId:
          type: string
    TransformationListResponse:
      type: array
      items:
        type: object
        properties:
          transformationType:
            type: string
            description: Type of transformation
            enum:
              - unit_conversion
              - aggregation_splitting
              - datatype_transformation
              - name_transformation
          sourceColumn:
            type: string
            description: Source column for the transformation
          transformationConfig:
            type: object
            description: Configuration specific to the transformation type
            properties:
              # Define properties specific to Unit Transformation
              unitType:
                type: string
                description: Type of unit conversion (e.g., meters to feet)

              # Define properties specific to Aggregation and Splitting
              aggregationType:
                type: string
                description: Type of aggregation (e.g., sum, average)
              splitDelimiter:
                type: string
                description: Delimiter for splitting

              # Define properties specific to Datatype Transformation
              targetType:
                type: string
                description: Target datatype (e.g., string, integer, float)

              # Define properties specific to Name Transformation
              newName:
                type: string
                description: New name after transformation
    EntityAttributeResponse:
      type: object
      properties:
        name:
          type: string
        datatype:
          type: string
    EntityResponse:
      type: object
      properties:
        name:
          type: string
        type: 
          type: string
          enum:
              - single entity
              - merged entity
        columns:
          type: array
          items:
            $ref: '#/components/schemas/EntityAttributeResponse'
    EntityListResponse:
      type: array
      items:
        $ref: '#/components/schemas/EntityResponse'  # Define the structure of the entity names list
    MergeConfigJoinRequest:
      type: object
      properties:
        mergeFieldSource:
          type: string
        mergeFieldTarget:
          type: string
        mergeOperation:
          type: string 
    MergeConfigRequest:
      type: object
      properties:
        entityName:
          type: string
        sourceEntity:
          type: string
        targetEntity:
          type: string
        mergeOperation:
          type: array 
          items:
            $ref: '#/components/schemas/MergeConfigJoinRequest' # Define the structure of the merge config
    MergeConfigResponse:
      type: object
      properties:
        mergeConfigId:
          type: string  # Define the structure of the merge config response

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/Webhooks/1.0.0

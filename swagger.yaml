openapi: 3.0.0
info:
  title: CallbackUrl and Subscription API
  version: 1.0.0
  description: API for callbackUrl and subscription management

tags:
  - name: Subscriptions
    description: Operations related to subscriptions
  - name: Entities
    description: List of entities with available fields
    
paths:
  /subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: Create a new subscription with specified details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    get:
      tags:
        - Subscriptions
      summary: Get all subscriptions
      description: Retrieve all subscriptions.
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
    patch:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update the details of a specific subscription.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateRequest'
      responses:
        '200':
          description: Subscription updated successfully
  /subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Get a subscription
      description: Retrieve details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    delete:
      tags:
        - Subscriptions
      summary: Delete a subscription
      description: Delete a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptionId:
                    type: string
        '400':
          description: Bad request - Subscription associated with a callbackUrl
    patch:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update the details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: Subscription updated successfully
  
  /subscriptions/{subscriptionId}/test:
    get:
      tags:
        - Subscriptions
      description: End point to test the subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  customResponse:
                    type: object
                  metaData:
                    type: object
                    properties:
                      entity:
                        type: string
                        enum:
                          - daily
                          - health
                          - hourly
                          - local_hourly
                          - sentek_daily
                          - sentek_hourly
                      timeStamp:
                        type: string
                        description: Sent Time stamp
                      subscriptionId:
                        type: string
                  data:
                    type: array
                    items:
                      type: object

  /subscriptions/health:
    get:
      tags:
        - Subscriptions
      description: Health data on Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    subscriptionId:
                      type: string
                    lastPublished:
                      type: string
                      description: Last published timestamp
                    failureCount:
                      type: integer
                      description: How many failures happend since the subscription is active
                    activeSince:
                      type: string
                      description: timestamp
                    
                  

  /metadata/entities:
    get:
      tags:
        - Entities
      description: 'Returns all the entities with column names'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
  # /schemas/entities:
  #   $ref: "#/paths/~1metadata/entities"
                
  
components:
  schemas:
    Field: 
      oneOf:
        - type: string
        - type: object
          properties:
            field: 
              type: string
            name:
              type: object
              properties:
                target:
                  type: string
            unitConversion:
              type: string #check whether we can give an enum
    Callback:
      type: object
      properties:
        url:
          type: string
        retryCount: 
          type: integer
        headers:
          allOf:
            - type: object
              properties:
                authorization:
                  type: string
                accept:
                  type: string
                  enum:
                    - application/json
                    - text/csv
            - type: object
    Subscription:
      type: object
      properties:
        name:
          type: string
        entity:
          type: string
          enum:
            - daily
            - health
            - hourly
            - local_hourly
            - sentek_daily
            - sentek_hourly
        fields:
          type: array
          items:
            type: string
            # $ref: '#/components/schemas/Field'
        callback:
          $ref: '#/components/schemas/Callback'
        status:
          type: string
          enum:
            - active
            - inactive
        customResponse:
          type: object
    SubscriptionRequest:
      type: object
      $ref: '#/components/schemas/Subscription'
    SubscriptionResponse:
      allOf:
        - type: object
          properties:
            subscriptionId:
              type: string
        - $ref: '#/components/schemas/Subscription'
    SubscriptionListResponse:
      type: array
      items:
        allOf:
          - type: object
            properties:
              subscriptionId:
                type: string
          - $ref: '#/components/schemas/Subscription'

    SubscriptionUpdateRequest:
      type: array
      items:
        allOf:
          - properties:
              subscriptionId:
                type: string
          - $ref: '#/components/schemas/Subscription' 

    Entity:
      type: object
      properties:
        name:
          type: string
          enum:
            - daily
            - health
            - hourly
            - local_hourly
            - sentek_daily
            - sentek_hourly
        fields:
          type: array
          items:
            type: string
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/Webhooks/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/CallbackUrls/1.0.0
